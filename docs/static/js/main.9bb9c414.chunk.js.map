{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/GetGifs.js","components/GifGrid.js","components/hoooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","zetLista","useState","texto","setTexto","onSubmit","e","preventDefault","trim","length","a","type","value","onChange","target","GifGridItem","title","url","id","className","src","alt","getGifs","category","encodeURI","fetch","res","json","data","Gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","lista","setLista","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAElBC,mBAAS,KAFS,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAsBvC,OACI,0BAAMC,SAdQ,SAACC,GACfA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAO,GAEnBR,GAAS,SAAAS,GAAC,OAAGP,GAAH,mBAAYO,OAE1BN,EAAS,MASL,2BACAO,KAAK,OACLC,MAAOT,EACPU,SAvBU,SAACP,GACfF,EAASE,EAAEQ,OAAOF,YCLbG,EAAc,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,IAAc,EAARC,GAGtC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKH,EAAKI,IAAKL,IACpB,2BAAIA,K,uBCJHM,EAAO,uCAAC,WAAMC,GAAN,uBAAAb,EAAA,6DACXO,EADW,iDACoCO,UAAWD,GAD/C,+DAECE,MAAMR,GAFP,cAEXS,EAFW,gBAGIA,EAAIC,OAHR,uBAGVC,EAHU,EAGVA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFb,GAAIa,EAAIb,GACRF,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATzB,kBAkBVY,GAlBU,4CAAD,sDCGPK,EAAU,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAGZrB,mBAAS,CAC/B0B,KAAK,GACLO,SAAQ,IAL0B,mBAG/BC,EAH+B,KAGxBC,EAHwB,KA0BtC,OAnBIC,qBAAU,WAENhB,EAAQC,GAAUgB,MAAK,SAAAC,GAEnBH,EAAS,CACHT,KAAKY,EACLL,SAAQ,SAIpB,CAACZ,IASAa,EDdUK,CAAalB,GAA3BK,EATgC,EAShCA,KAAKO,EAT2B,EAS3BA,QAQR,OACI,oCACI,gCAAMZ,EAAN,KAEIY,GAAW,4CAGd,yBAAKhB,UAAU,aAEAS,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACAW,IAAKX,EAAIb,IACLa,UE/BvBY,EAAe,WAAO,IAAD,EAERzC,mBAAS,CAAC,SAFF,mBAE3B0C,EAF2B,KAEpBC,EAFoB,KAM9B,OACI,oCACI,6CACA,kBAAC,EAAD,CAAa5C,SAAU4C,IACvB,6BAEA,4BAEOD,EAAMd,KAAI,SAAAP,GAAQ,OAClB,kBAAC,EAAD,CACAmB,IAAKnB,EACLA,SAAUA,UCjB7BuB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9bb9c414.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({zetLista}) => {\r\n\r\n const [texto, setTexto]=useState(\" \" )\r\n    \r\n    const handleValue=(e)=>{\r\n        setTexto(e.target.value)\r\n        //console.log(e.target.value)\r\n    }\r\n\r\n    const handleFormu=(e)=>{\r\n        e.preventDefault();\r\n        if(texto.trim().length>2) {\r\n\r\n            zetLista(a=>[texto,...a])  //<--------------   \r\n        }\r\n        setTexto(\"\")\r\n        \r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleFormu}>  \r\n            <input \r\n            type=\"text\"\r\n            value={texto}\r\n            onChange={handleValue}\r\n            >\r\n            \r\n            </input>\r\n         </form>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url , id}) => {\r\n\r\n    //console.log({title, url})\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\nexport const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Dvd1UkMoSTsQi9bA8n5Jza2p9t8PJRAY`       \r\n    const res = await fetch(url)\r\n    const {data} = await res.json()\r\n    //console.log(data)\r\n    const Gifs= data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })    \r\n\r\n\r\n \r\n        \r\n    \r\n    //console.log(Gifs)\r\n    return Gifs;\r\n    \r\n    //console.log(images) // AQUI NO DA, SINO MAS ABAJO DENTRO DE RETURN\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem'\r\nimport { useFetchGifs } from './hoooks/useFetchGifs'\r\n//import { getGifs } from './helpers/GetGifs'\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  /*   const [images, setImages] = useState([])\r\n\r\n    useEffect(()=>{    // sirve para que se ejecute una sola vez \r\n        getGifs(category).then(setImages)\r\n    },[category]) */\r\n    \r\n\r\nconst {data,loading}=useFetchGifs(category);\r\n//console.log(state)\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return(   \r\n        <>\r\n            <h3> {category} </h3>\r\n            {\r\n                loading && <p> cargando... </p>\r\n            }\r\n\r\n             <div className=\"card-grid\">\r\n                        {\r\n                            data.map(img =>(\r\n                                <GifGridItem \r\n                                key={img.id}\r\n                                {...img} \r\n                                \r\n                                />\r\n\r\n                            ))\r\n                        }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/GetGifs\"\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setstate] = useState({ \r\n        data:[],\r\n        loading:true})\r\n\r\n        useEffect(()=>{\r\n\r\n            getGifs(category).then(imgs=>{\r\n\r\n                setstate({ \r\n                      data:imgs,\r\n                      loading:false})  \r\n                  \r\n            })\r\n\r\n        },[category])\r\n\r\n\r\n\r\n\r\n       \r\n        \r\n\r\n\r\n    return state;    \r\n   \r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [lista, setLista] = useState([\"goku\"])\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp </h2>\r\n            <AddCategory zetLista={setLista} />\r\n            <hr/>\r\n           \r\n            <ol>\r\n                {\r\n                   lista.map(category=>(\r\n                   <GifGrid \r\n                   key={category}\r\n                   category={category} \r\n                   />) \r\n                   )\r\n                }                 \r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}